
To run the ansible playbook ssh to machine you intend to run Galaxy on. The guideline assumes you login as "ubuntu" user. The code is tested for ubuntu 20.04 LTS

on Galaxy machine:

    apt install ansible

    `apt-get install sshpass`

on Pulsar machine:

    `sudo passwd ubuntu`

    `sudo vi /etc/ssh/sshd_config`

    change `PasswordAuthentication no` To `PasswordAuthentication yes`
    `sudo service ssh restart`

on Galaxy machine:
  
    `git clone https://github.com/CEGRcode/Galaxy_Install_Ansible.git`
    
    `cd Galaxy_Install_Ansible`
    
    `ansible-playbook galaxy.yml`

    `ansible-playbook pulsar.yml --ask-pass`


Please note, in the the groupvars/all.yml file, a password needs to be used for secure communication between pulsar and Galaxy.

Current Ansible includes

Galaxy with
  CVMFS
  systemd
  slurm
  nginx
  SSL
  RabbitMQ

Pulsar with
  CVMFS
  systemd
  slurm

RabbitMQ is used for communication between Galaxy and Pulsar


Notes:
number of CPUs in Pulsar machine needs to be updated based on specific machine configuration at:
group_vars/pulsarservers.yml

Galaxy root directory, where all the files related to Galaxy will be installed, can be changed in group_vars/galaxyservers.yml

To Install galaxy on a separate volume from OS follow these steps.

1- Create a new empty volume in OpenStack. Volumes->Create Volume

2- Attach The created volume to an instance Volums->select your volume->Manage Attachment

3-ssh to the instance to which new Volume is attached and type 'lsblk' to see new volume which is likely /dev/vdb

4- mkfs -t xfs /dev/vdb which creates filesystems based on XFS format which is an expandable disk format

5-make a directory where is the mounting point of the new volume. `sudo mkdir /mnt/mountpoint`

6- protect the mountpoint directory. `sudo chattr +i /mnt/mountpoint`

7- Mount the Volume. `sudo mount /dev/vdb /mnt/mountpoint`

8- make the mount automatic after the reboot. 

vi /etc/fstab  add the line. "/dev/vdb /mnt/mountpoint ext4 defaults,nofail" 

Make sure the four entries are tab separated.

Change the root directory of galaxy based on the name of the mount directory for example it can be:

`/mnt/mountpoint/srv/galaxy`


Notes on installing ChIP-exo pipeline tools using Ephemeris:

Tools of the pipeline that are avaiable on Galaxy tool-shed can be installed through command line using Ephemeris package as the following:

1. `virtualenv -p python3 ~/ephemeris_venv`

2. `. ~/ephemeris_venv/bin/activate`

3. `pip install ephemeris`

4. `shed-tools install -g https://your-galaxy -a <api-key> -t pairedPEGR003_tools.yml`

where api-key can be found in Galaxy web interface under `Admin->Users`

Other local tools are avilable in CEGR repository and can be downloaded using git clone.

1- https://github.com/CEGRcode/scriptmanager-galaxy_tools

2- https://github.com/CEGRcode/pegr-galaxy_tools

3- https://github.com/CEGRcode/general-galaxy_tools

Installation instructions are given within each repository


Notes on uplaoding workflow to Galaxy

Workflow can be downloaded from another Galaxy instance and then uploaded to the new Galaxy instance as the following:

Downloading Workflow:

  Wokflow-> Select the desired workflow-> download

Uploading Workflow:

Wokflow -> import -> browse





